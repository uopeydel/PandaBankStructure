// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PandaBank.Account.DAL.DataAccess;

namespace PandaBank.Account.DAL.Migrations
{
    [DbContext(typeof(PandaAccountDbContext))]
    [Migration("20190922070822_PandaBankAccount")]
    partial class PandaBankAccount
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PandaBank.Account.DAL.Models.PandaAccount", b =>
                {
                    b.Property<string>("Id");

                    b.Property<bool>("Active");

                    b.Property<double>("Balances");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PandaAccount");
                });

            modelBuilder.Entity("PandaBank.Account.DAL.Models.PandaStatement", b =>
                {
                    b.Property<string>("PandaAccountId");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Balances");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status");

                    b.HasKey("PandaAccountId", "Id");

                    b.HasAlternateKey("Id", "PandaAccountId");

                    b.ToTable("PandaStatement");
                });

            modelBuilder.Entity("PandaBank.Account.DAL.Models.UserAccount", b =>
                {
                    b.Property<string>("PandaAccountId");

                    b.Property<long>("PandaUserId");

                    b.HasKey("PandaAccountId", "PandaUserId");

                    b.ToTable("UserAccount");
                });

            modelBuilder.Entity("PandaBank.Account.DAL.Models.PandaStatement", b =>
                {
                    b.HasOne("PandaBank.Account.DAL.Models.PandaAccount", "PandaAccount")
                        .WithMany("PandaStatement")
                        .HasForeignKey("PandaAccountId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PandaBank.Account.DAL.Models.UserAccount", b =>
                {
                    b.HasOne("PandaBank.Account.DAL.Models.PandaAccount", "PandaAccount")
                        .WithMany("UserAccounts")
                        .HasForeignKey("PandaAccountId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
